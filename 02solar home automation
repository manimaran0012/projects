#include <WiFi.h>
#include <Firebase.h>

#define FIREBASE_URL "https://solar-home-automation-default-rtdb.firebaseio.com/"
Firebase fb(FIREBASE_URL);

// List of Wi-Fi credentials
const char* ssids[] = {"Infinix HOT 30 5G", "Galaxy F6292c9", "DESKTOP-LA7NV8S 3011"};
const char* passwords[] = {"mani00122", "dxwm3987", "manimaran"};
const int WIFI_COUNT = 3;  // Number of Wi-Fi networks

#define RELAY1 25
#define RELAY2 26
#define RELAY3 27

unsigned long previousMillis = 0;
const long interval = 300; // check Firebase every 300ms

void setup() {
  Serial.begin(115200);

  // Connect to the first available Wi-Fi
  connectToWiFi();

  // Initialize relays
  pinMode(RELAY1, OUTPUT);
  pinMode(RELAY2, OUTPUT);
  pinMode(RELAY3, OUTPUT);
  digitalWrite(RELAY1, HIGH);
  digitalWrite(RELAY2, HIGH);
  digitalWrite(RELAY3, HIGH);
}

void loop() {
  unsigned long currentMillis = millis();
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;

    String jsonData = "";
    if(fb.getString("SOLAR_HOME_AUTOMATION", jsonData)) {
      // Simple parsing for Switch1, Switch2, Switch3
      String sw1 = jsonData.substring(jsonData.indexOf("Switch1\":\"") + 10, jsonData.indexOf("\",\"Switch2"));
      String sw2 = jsonData.substring(jsonData.indexOf("Switch2\":\"") + 10, jsonData.indexOf("\",\"Switch3"));
      String sw3 = jsonData.substring(jsonData.indexOf("Switch3\":\"") + 10, jsonData.indexOf("\"}"));

      // Control relays
      digitalWrite(RELAY1, sw1 == "ON" ? LOW : HIGH);
      digitalWrite(RELAY2, sw2 == "ON" ? LOW : HIGH);
      digitalWrite(RELAY3, sw3 == "ON" ? LOW : HIGH);

      Serial.print("Switch1: "); Serial.print(sw1);
      Serial.print(" | Switch2: "); Serial.print(sw2);
      Serial.print(" | Switch3: "); Serial.println(sw3);
    } else {
      Serial.println("Failed to read Firebase");
    }
  }
}

// Function to scan and connect to first available Wi-Fi
void connectToWiFi() {
  Serial.println("Scanning for Wi-Fi networks...");
  int n = WiFi.scanNetworks();
  if (n == 0) {
    Serial.println("No networks found!");
  } else {
    for (int i = 0; i < WIFI_COUNT; i++) {
      for (int j = 0; j < n; j++) {
        if (String(WiFi.SSID(j)) == ssids[i]) {
          Serial.print("Connecting to Wi-Fi: "); Serial.println(ssids[i]);
          WiFi.begin(ssids[i], passwords[i]);
          int attempts = 0;
          while (WiFi.status() != WL_CONNECTED && attempts < 20) {
            delay(500);
            Serial.print(".");
            attempts++;
          }
          if (WiFi.status() == WL_CONNECTED) {
            Serial.println("\nWi-Fi Connected!");
            Serial.print("IP Address: ");
            Serial.println(WiFi.localIP());
            return;
          } else {
            Serial.println("\nFailed to connect, trying next...");
          }
        }
      }
    }
  }
  Serial.println("No known Wi-Fi found. ESP32 cannot connect.");
}
